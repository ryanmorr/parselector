/*! @ryanmorr/parselector v1.0.2 | https://github.com/ryanmorr/parselector */
!function(e,s){"object"==typeof exports&&"undefined"!=typeof module?module.exports=s():"function"==typeof define&&define.amd?define(s):(e="undefined"!=typeof globalThis?globalThis:e||self).parselector=s()}(this,(function(){"use strict";const e=new Map,s=/^(?:\\.|[\w\-\u00c0-\uFFFF])+/,t=/\\(?:([0-9a-f]{1,6} ?)|(.))/gi,n=/:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^)]+\)|[^()]*)+)\2\))?/,u=/^\[((?:\\.|[\w\u00c0-\uFFFF-])+)\s*(?:(\S?=)\s*(?:(['"])([^]*?)\3|(#?(?:\\.|[\w\u00c0-\uFFFF-])*)|)|)\s*(i)?\]/;return function(o){if(o=o.trim(),e.has(o))return e.get(o);let a,r=[],l=!1;const i=[],p=()=>{const e=o.match(s)[0];return f(e.length),d(e)},f=e=>{o=o.substring(e)},h=e=>{for(;c(o.charAt(e));)e++;f(e)},c=e=>" "===e||"\n"===e||"\t"===e||"\f"===e||"\r"===e,d=e=>e.replace(t,((e,s,t)=>s?String.fromCharCode(parseInt(s,16)):t)),m=()=>{a={nodeName:null,attributes:[],pseudoClasses:[],pseudoElement:null}};for(m();""!==o;){const e=o.charAt(0);if(c(e))l=!0,h(1);else if(">"===e||"<"===e||"~"===e||"+"===e)(a.nodeName||a.attributes.length>0||a.pseudoClasses.length>0)&&r.push(a),r.push(e),m(),l=!1,h(1);else if(","===e)r.push(a),i.push(r),m(),r=[],l=!1,h(1);else if(l&&(r.push(a),r.push(" "),m(),l=!1),"*"===e)f(1),a.nodeName="*";else if("#"===e)f(1),a.attributes.push({name:"id",operator:"=",value:p(),ignoreCase:!1});else if("."===e)f(1),a.attributes.push({name:"class",operator:"~=",value:p(),ignoreCase:!1});else if("["===e){const e=o.match(u);f(e[0].length);const s=d(e[1]);a.attributes.push({name:s,operator:e[2]||"",value:d(e[4]||e[5]||""),ignoreCase:!!e[6]})}else if(":"===e)if(":"===o[1])f(2),a.pseudoElement=p();else{const e=o.match(n);f(e[0].length);const s=d(e[1]);a.pseudoClasses.push({name:s,value:d(e[3]||"")})}else s.test(o)&&(a.nodeName=p().toLowerCase())}return r.push(a),i.push(r),e.set(o,i),i}}));
