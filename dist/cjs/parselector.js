/*! @ryanmorr/parselector v1.0.0 | https://github.com/ryanmorr/parselector */
"use strict";const e=new Map,s=/^(?:\\.|[\w\-\u00c0-\uFFFF])+/,t=/\\(?:([0-9a-f]{1,6} ?)|(.))/gi,u=/:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^)]+\)|[^()]*)+)\2\))?/,a=/^\[((?:\\.|[\w\u00c0-\uFFFF-])+)\s*(?:(\S?=)\s*(?:(['"])([^]*?)\3|(#?(?:\\.|[\w\u00c0-\uFFFF-])*)|)|)\s*(i)?\]/;module.exports=function(n){if(n=n.trim(),e.has(n))return e.get(n);let o,r=[],l=!1;const i=[],h=()=>{const e=n.match(s)[0];return p(e.length),m(e)},p=e=>{n=n.substring(e)},c=e=>{for(;f(n.charAt(e));)e++;p(e)},f=e=>" "===e||"\n"===e||"\t"===e||"\f"===e||"\r"===e,m=e=>e.replace(t,((e,s,t)=>s?String.fromCharCode(parseInt(s,16)):t)),F=()=>{o={nodeName:null,attributes:[],pseudoClasses:[],pseudoElement:null}};for(F();""!==n;){const e=n.charAt(0);if(f(e))l=!0,c(1);else if(">"===e||"<"===e||"~"===e||"+"===e)(o.nodeName||o.attributes.length>0||o.pseudoClasses.length>0)&&r.push(o),r.push(e),F(),l=!1,c(1);else if(","===e)r.push(o),i.push(r),F(),r=[],l=!1,c(1);else if(l&&(r.push(o),r.push(" "),F(),l=!1),"*"===e)p(1),o.nodeName="*";else if("#"===e)p(1),o.attributes.push({name:"id",operator:"=",value:h(),ignoreCase:!1});else if("."===e)p(1),o.attributes.push({name:"class",operator:"~=",value:h(),ignoreCase:!1});else if("["===e){const e=n.match(a);p(e[0].length);const s=m(e[1]);o.attributes.push({name:s,operator:e[2]||"",value:m(e[4]||e[5]||""),ignoreCase:!!e[6]})}else if(":"===e)if(":"===n[1])p(2),o.pseudoElement=h();else{const e=n.match(u);p(e[0].length);const s=m(e[1]);o.pseudoClasses.push({name:s,value:m(e[3]||"")})}else s.test(n)&&(o.nodeName=h().toLowerCase())}return r.push(o),i.push(r),e.set(n,i),i};
